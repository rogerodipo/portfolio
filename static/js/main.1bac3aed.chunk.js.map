{"version":3,"sources":["assets/architecture.jpg","assets/vanguard.jpg","assets/money.jpg","assets/guitar.jpg","components/Hero.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Hero","className","avgTypingDelay","cursor","show","blink","element","hideWhenDone","hideWhenDoneDelay","Backspace","count","delay","style","fontSize","to","smooth","Component","App","state","navDrawn","removeNav","navigation","document","querySelector","setState","classList","remove","toggleNav","toggle","console","log","onClick","href","this","id","src","img","alt","icon","faLaptopCode","faCode","faCogs","randomkey","vanguard","cashtrack","action","method","encType","required","type","placeholder","name","cols","rows","React","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1bac3aed.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/architecture.942edacb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/vanguard.e03307c5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/money.426b2b63.jpg\";","module.exports = __webpack_public_path__ + \"static/media/guitar.472168a9.jpg\";","import React, { Component } from \"react\";\r\nimport Typist from \"react-typist\";\r\nimport \"react-typist/dist/Typist.css\";\r\nimport {Link} from 'react-scroll'\r\n\r\nexport class Hero extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"hero\">\r\n        <div>\r\n          <div>\r\n            \r\n              <h1>Full-Stack Web Developer.</h1>\r\n              <Typist\r\n            avgTypingDelay = {30}\r\n              cursor={{\r\n                show: true,\r\n                blink: true,\r\n                element: \"|\",\r\n                hideWhenDone: true,\r\n                hideWhenDoneDelay: 1000\r\n              }}\r\n            >\r\n              <p>Also a</p>\r\n            \r\n              <span>mechatronics engineer</span>\r\n              <Typist.Backspace count={21} delay={2000} />\r\n              <span>mobile app developer (Android)</span>\r\n              <Typist.Backspace count={30} delay={2000} />\r\n              <span>guitarist</span>\r\n              <Typist.Backspace count={9} delay={2000} />\r\n              <span style = {{fontSize: \"1.2em\"}}>creative.</span>\r\n\r\n\r\n            </Typist>\r\n          </div>\r\n          <div className=\"buttons\">\r\n            <Link to=\"contact\" smooth={true}><button className=\"hire-button\">Hire me today</button></Link>\r\n            <Link to=\"about\" smooth={true}><button>Find out more</button></Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Hero;","import React from \"react\";\nimport Hero from \"./components/Hero\";\nimport img from \"./assets/architecture.jpg\";\nimport vanguard from \"./assets/vanguard.jpg\";\nimport cashtrack from \"./assets/money.jpg\";\nimport randomkey from \"./assets/guitar.jpg\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faCode,\n  faLaptopCode,\n  faCogs\n} from \"@fortawesome/free-solid-svg-icons\";\nimport \"./App.css\";\nimport { Link } from \"react-scroll\";\n\nclass App extends React.Component {\n  state = {\n    navDrawn: false\n  };\n\n  removeNav = () => {\n    let navigation = document.querySelector(\".links-ul\");\n    this.setState({ navDrawn: !this.state.navDrawn });\n    navigation.classList.remove(\"nav-active\");\n  }\n\n  toggleNav = () => {\n    let navigation = document.querySelector(\".links-ul\");\n    this.setState({ navDrawn: !this.state.navDrawn });\n    navigation.classList.toggle(\"nav-active\");\n    console.log(navigation.classList);\n  }\n\n  render() {\n    return (\n      <div\n        className=\"App\"\n        onClick={() => {\n          if (this.state.navDrawn) {\n            this.removeNav();\n          }\n        }}\n      >\n        <nav>\n          <a href=\"/\" className=\"brand\">\n            <span>Roger</span>Odipo\n          </a>\n          <ul className=\"links-ul\" >\n            <Link to=\"about\" smooth={true} onClick = {this.removeNav}>\n              <li>About Me</li>\n            </Link>\n\n            <Link to=\"tools\" smooth={true} onClick = {this.removeNav}>\n              <li>Tools</li>\n            </Link>\n\n            <Link to=\"work\" smooth={true} onClick = {this.removeNav}>\n              <li>Work</li>\n            </Link>\n            <Link to=\"contact\" smooth={true} onClick = {this.removeNav}>\n              <li>Contact</li>\n            </Link>\n          </ul>\n          <div\n            className=\"hamburger\"\n            onClick={this.toggleNav}\n          >\n            <div className = \"line1\"/>\n            <div className = \"line2\"/>\n            <div className = \"line3\"/>\n          </div>\n        </nav>\n        <Hero />\n        <section id=\"about\">\n          <div>\n            <img src={img} alt=\"Pattern\" />\n            <div>\n              <h2>\n                My passion is building things that are beautiful to behold and\n                simple to use.\n              </h2>\n              <p>\n                Marketing aside, what you need is a working web or mobile app\n                that looks great and offers a fluid experience. That's what I\n                do.\n              </p>\n            </div>\n          </div>\n        </section>\n        <section id=\"tools\" className=\"three-column-section\">\n          <h1>These are a few of my favourite things. </h1>\n          <div>\n            <div className=\"grid-item grid-item-1\">\n              <div className=\"headings\">\n                <h1>\n                  <FontAwesomeIcon icon={faLaptopCode} />\n                </h1>\n                <h3>Front-end</h3>\n              </div>\n              <ul>\n                <li>React</li>\n                <li>Redux</li>\n                <li>Bootstrap</li>\n                <li>Jquery</li>\n              </ul>\n            </div>\n            <div className=\"grid-item grid-item-2\">\n              <div className=\"headings\">\n                <h1>\n                  <FontAwesomeIcon icon={faCode} />\n                </h1>\n                <h3>Back-end</h3>\n              </div>\n              <ul>\n                <li>Django</li>\n                <li>Node</li>\n                <li>C-Panel</li>\n              </ul>\n            </div>\n\n            <div className=\"grid-item grid-item-3\">\n              <div className=\"headings\">\n                <h1>\n                  <FontAwesomeIcon icon={faCogs} />\n                </h1>\n                <h3>Engineering</h3>\n              </div>\n              <ul>\n                <li>Automation</li>\n                <li>PCB Design</li>\n                <li>PLC Programming</li>\n                <li>PID Control</li>\n              </ul>\n            </div>\n          </div>\n        </section>\n        <section id=\"work\" className=\"three-column-section\">\n          <h1>Here's some work I've done.</h1>\n          <div>\n            <div className=\"grid-item grid-item-1\">\n              <img src={randomkey} alt=\"\" />\n              <p>\n                <span>RandomKey</span> is a simple Android app for musicians to\n                use in their practice. It helps musicians learn different keys,\n                along with their key signatures and relative majors and minors.\n                It’s a great app for all armateur musicians: from vocalists to\n                pianists.\n              </p>\n              <a href=\"https://play.google.com/store/apps/details?id=com.rockrussell.music.randomkey\">\n                <button>Visit Page</button>\n              </a>\n            </div>\n            <div className=\"grid-item grid-item-2\">\n              <img src={vanguard} alt=\"\" />\n              <p>\n                <span>Vanguard</span> is a research and transcription company.\n                They offer automatic billing for transcription jobs as well as\n                PayPal and card payment options. They also offer a wide range of\n                research services.\n              </p>\n              <a href=\"https://www.vanguardswift.com\">\n                <button>Visit Page</button>\n              </a>\n            </div>\n\n            <div className=\"grid-item grid-item-3\">\n              <img src={cashtrack} alt=\"\" />\n              <p>\n                <span>CashTrack</span> is a simple personal accounting app to\n                help you keep track of expenses. If you would like to track your\n                expenditure separately, one can create more ‘tracks’. It also\n                works for keeping count of costs in the supermarket and other\n                simple arithmetic needs.\n              </p>\n              <a href=\"https://play.google.com/store/apps/details?id=com.apps.plethora.cashtrack\">\n                <button>Visit Page</button>\n              </a>\n            </div>\n          </div>\n        </section>\n        <section id=\"contact\">\n          <h1>Get in touch.</h1>\n          <form\n            action=\"mailto:rogerodipo@gmail.com\"\n            method=\"post\"\n            encType=\"text/plain\"\n          >\n            <input required type=\"text\" placeholder=\"Name\" name=\"Name: \" />\n            <input required type=\"email\" placeholder=\"Email\" name=\"Email: \" />\n            <textarea\n              required\n              id=\"\"\n              cols=\"30\"\n              rows=\"8\"\n              placeholder=\"Message\"\n              name=\"Message: \"\n            />\n            <button required type=\"submit\">\n              Send\n            </button>\n          </form>\n        </section>\n        <footer>\n          <h1>Let me build the website you need.</h1>\n          <p>Handcrafted by me. &copy;2019 | mail@rogerodipo.me </p>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}